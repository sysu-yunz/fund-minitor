// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// The current database to use.
use('fund');

// Create a new index in the collection.
// db.getCollection('basic')
//   .createIndex(
//     {
//       fundName: 1,
      /*
       * Keys
       *
       * Normal index
       * fieldA:  1, //ascending
       * fieldB: -1  //descending
       *
       * Wildcard index
       * '$**': 1, //wildcard index on all fields and subfields in a document
       * 'path.to.field.$**': 1 //wildcard index on a specific field and its subpaths
       *
       * Text index
       * fieldA: 'text',
       * fieldB: 'text'
       *
       * Geospatial Index
       * locationField: '2dsphere'
       *
       * Hashed Index
       * fieldA: 'hashed'
       */
    // }, {
      /*
       * Options (https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options-for-all-index-types)
       *
       * background: true, //ignored in 4.2+
       * unique: false,
       * name: 'some name',
       * partialFilterExpression: {},
       * sparse: false,
       * expireAfterSeconds: TTL,
       * collation: {}
       */
  //   }
  // );

  // Create a new index in the collection.
// db.getCollection('stock')
//   .createIndex(
//     {
//       name: 1,
      /*
       * Keys
       *
       * Normal index
       * fieldA:  1, //ascending
       * fieldB: -1  //descending
       *
       * Wildcard index
       * '$**': 1, //wildcard index on all fields and subfields in a document
       * 'path.to.field.$**': 1 //wildcard index on a specific field and its subpaths
       *
       * Text index
       * fieldA: 'text',
       * fieldB: 'text'
       *
       * Geospatial Index
       * locationField: '2dsphere'
       *
       * Hashed Index
       * fieldA: 'hashed'
       */
    // }, {
      /*
       * Options (https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options-for-all-index-types)
       *
       * background: true, //ignored in 4.2+
       * unique: false,
       * name: 'some name',
       * partialFilterExpression: {},
       * sparse: false,
       * expireAfterSeconds: TTL,
       * collation: {}
       */
  //   }
  // );

// count the number of documents in the collection
// db.getCollection('stock').count();

// find doc with symbol SZ300741
// db.getCollection('stock').findOne({symbol: 'SH603096'});

// find one doc with name contain '万科'
// db.getCollection('stock').findOne({name: /茅台/});

// find one doc with name contains '万科' or symbol contains '300741'
// db.getCollection('stock').findOne({$or: [{name: /茅台/}, {symbol: /300741/}]});

// db.getCollection("stock").findOne

// add index in collection crypto with field id   "name": "Bitcoin","symbol": "BTC", "slug": "bitcoin", cmcrank
// db.getCollection('crypto').createIndex({id: 1});
// db.getCollection('crypto').createIndex({name: 1});
// db.getCollection('crypto').createIndex({symbol: 1});
// db.getCollection('crypto').createIndex({slug: 1});
// db.getCollection('crypto').createIndex({cmcrank: 1});

// get doc count in collection crypto
// db.getCollection('crypto').count();

// find crypto symbol contains 'INT'
// db.getCollection('crypto').findOne({symbol: "INT"});

// 2021-11-26 23:05:29

// get doc count in collection crypto
// crypto_count = db.getCollection('crypto').count();

// // get doc count in collection stock
// stockcn_count = db.getCollection('stock').count();

// // get doc count in collection stock_hk
// stockhk_count = db.getCollection('stock_hk').count();

// // get doc count in collection stock_us
// stockus_count = db.getCollection('stock_us').count();

// // // log out the count
// print("crypto count: " + crypto_count);
// print("stockcn count: " + stockcn_count);
// print("stockhk count: " + stockhk_count);
// print("stockus count: " + stockus_count);

// result 

// crypto count: 7672
// stockcn count: 4638
// stockhk count: 2880
// stockus count: 8489

// 2021-11-27 08:41:37

// crypto count: 7740
// stockcn count: 4638
// stockhk count: 2880
// stockus count: 8501


// db.getCollection('crypto').findOne({symbol: "PEOPLE"});

// delete doc with symbol PEOPLE
// db.getCollection('crypto').deleteOne({symbol: "PEOPLE"});
// delete doc with symbol SZ000001
// db.getCollection('stock').deleteOne({symbol: "SZ000001"});
// delete doc with symbol SH603096
// db.getCollection('stock').deleteOne({symbol: "SH603096"});
// find doc with symbol SH603096
// db.getCollection('stock').findOne({symbol: "SH603096"});
// db.getCollection('stock').findOne({symbol: "SZ000002"});
// delete doc with symbol 00001
// db.getCollection('stock_hk').deleteOne({symbol: "00001"});
// delete doc with symbol MSFT
// db.getCollection('stock_us').deleteOne({symbol: "MSFT"});


// find doc with largest cmc_id in crypto cllection
// db.getCollection('crypto').find().sort({id:-1}).limit(1)

// create a new index with field id in crypto collection
// db.getCollection('crypto').createIndex({id: -1});

// delete doc with id larger than 15200 in crypto collection
// db.getCollection('crypto').deleteMany({id: {$gt: 15200}});

// 2021-12-01 10:19:27
// find doc with largest cmc_id in crypto cllection
// db.getCollection('crypto').find().sort({id:-1}).limit(6)

// 2021-12-04 23:30:09
use('bot');
// find runtime field not equal to "" and ep field not equal to " in collection douban
// db.getCollection('movie').find({$or: [{runtime: {$ne: ""}}, {ep: {$ne: ""}}]}).count();
// db.getCollection('movie').find({runtime: {$ne: ""}}).count(); 
// db.getCollection('movie').findOne({subject: "20395155"});

// add index in collection douban with field subject
// db.getCollection('movie').createIndex({subject: 1});
// db.getCollection('movie').createIndex({title: 1});
// db.getCollection('update').createIndex({updateid: 1});

// 2021-12-07 22:34:10
// create TTL index in database bot collection update with field updateid
// db.getCollection('update').createIndex({updateid: 1}, {expireAfterSeconds: 3600});

// remove index in collection update with field updateid
// db.getCollection('update').dropIndex({updateid: 1});





